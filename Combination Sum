
void helper(vector<vector<int> > &ans, vector<int> &A, vector<int> v, int sum, 
int idx){
    if(sum == 0){
        ans.push_back(v);
        return;
    }
    else if(sum < 0) return;
    
    for(int i = idx; i < A.size(); i++){
        if(A[i] > sum) break;
        v.push_back(A[i]);
        helper(ans, A, v, sum - A[i], i);
        v.pop_back();
    }
}

vector<vector<int> > combinationSum(vector<int> &A, int B) {
    // Your code here
    vector<vector<int> > ans;
    sort(A.begin(), A.end() );
    A.erase(unique(A.begin(), A.end() ), A.end() );
    vector<int> v;
    
    helper(ans, A, v, B, 0);
    
    return ans;
}
